name: webdavUpload

on:
  workflow_dispatch:

jobs:

  downloadAndUpload:

    name: downloadAndUpload

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: SSH
        uses: P3TERX/ssh2actions@main
      
      - name: test
        run: |
          # curl https://pipelines.actions.githubusercontent.com/oFar2WmGT0AgjDyshLHuJ5WPpJzQ77Mo0UaqSHQ9VK9zqfUgRl/_apis/pipelines/1/runs/315/signedartifactscontent?artifactName=OpenWrt_firmware&urlExpires=2020-09-02T14%3A44%3A18.9452072Z&urlSigningMethod=HMACV1&urlSignature=dq7sqo92QDDVQA%2F%2BX7%2F5gtFnysbtO1XVUtDDBydWWqI%3D >download
          cat >> 1.img.gz <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          EOF
          cat >> 2.img.gz <<EOF
          CONFIG_TARGET_IMAGES_GZIP2=y
          EOF
          find ./ -name "*img*" | xargs -i -n1 curl --user ${{ secrets.WEBDAV_ACCOUNT }}:${{ secrets.WEBDAV_PWD }} -T {} ${{ secrets.WEBDAV_SITE }}ledefirmware/
          # curl --user ${{ secrets.WEBDAV_ACCOUNT }}:${{ secrets.WEBDAV_PWD }} -T npp.7.5.8.Installer.x32.exe ${{ secrets.WEBDAVSITE }}/test/
